
-------------------------------------------------
-- 1. PRODUCT (상품)

CREATE TABLE PRODUCT (
	PRODUCT_NUM NUMBER,
	PRODUCT_NAME VARCHAR2(50) NOT NULL,
	PRODUCT_DETAIL CLOB,
	PRODUCT_SCORE NUMBER(2, 1)
);

SELECT * FROM PRODUCT;
DROP TABLE PRODUCT;

ALTER TABLE PRODUCT ADD CONSTRAINT PRODUCT_NUM_PK PRIMARY KEY (PRODUCT_NUM);

-- SEQUENCE

CREATE SEQUENCE PRODUCT_SEQ
START WITH 1;

INSERT INTO PRODUCT
VALUES (PRODUCT_SEQ.NEXTVAL, 'a개껌', '좋아요', 4.1);

INSERT INTO PRODUCT
VALUES (PRODUCT_SEQ.NEXTVAL, 'b사료', '그냥 그래요', 3.8);

-------------------------------------------------
-- 2. PRODUCT OPTION (상품 옵션)

CREATE TABLE PRODUCT_OPTION (
	OPTION_NUM NUMBER,
	PRODUCT_NUM NUMBER NOT NULL,
	OPTION_NAME VARCHAR2(50) NOT NULL,
	OPTION_PRICE NUMBER NOT NULL,
	OPTION_STOCK NUMBER
);

ALTER TABLE PRODUCT_OPTION ADD CONSTRAINT PO_ON_PK PRIMARY KEY (OPTION_NUM);
-- FK
ALTER TABLE PRODUCT_OPTION ADD CONSTRAINT PO_PN_FK FOREIGN KEY (PRODUCT_NUM) REFERENCES PRODUCT (PRODUCT_NUM) ON DELETE CASCADE;

SELECT * FROM PRODUCT_OPTION;
DROP TABLE PRODUCT_OPTION;

-- SEQUENCE

CREATE SEQUENCE OPTION_SEQ
START WITH 1;

INSERT INTO PRODUCT_OPTION
VALUES (OPTION_SEQ.NEXTVAL, 1, '빨간색', 5000, 5);

INSERT INTO PRODUCT_OPTION
VALUES (OPTION_SEQ.NEXTVAL, 1, '초록색', 5000, 4);

-------------------------------------------------
-- 3. COMMENT (댓글)

CREATE TABLE COMMENTS (
	COMMENT_NUM NUMBER,
	PRODUCT_NUM NUMBER,
	COMMENT_WRITER VARCHAR2(50),
	COMMENT_UPLOAD_DATE DATE NOT NULL,
	COMMENT_DETAIL CLOB
);

ALTER TABLE COMMENTS ADD CONSTRAINT C_CN_PK PRIMARY KEY (COMMENT_NUM);
-- FK
ALTER TABLE COMMENTS ADD CONSTRAINT COMMENT_PN_FK FOREIGN KEY (PRODUCT_NUM) REFERENCES PRODUCT (PRODUCT_NUM) ON DELETE CASCADE;
ALTER TABLE COMMENTS ADD CONSTRAINT COMMENT_WRITER_FK FOREIGN KEY (COMMENT_WRITER) REFERENCES MEMBER (MEMBER_ID) ON DELETE CASCADE;

SELECT * FROM COMMENTS;
DELETE COMMENTS;
DROP TABLE COMMENTS;

-- SEQUENCE

CREATE SEQUENCE COMMENT_SEQ
START WITH 1;

INSERT INTO COMMENTS
VALUES (COMMENT_SEQ.NEXTVAL, 1, 'C1', SYSDATE, '좋아요');

-------------------------------------------------
-- 4. MEMBER (회원)

CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR2(200),
	MEMBER_PW VARCHAR2(200),
	MEMBER_NAME VARCHAR2(200),
	MEMBER_ADDRESS VARCHAR2(200),
	MEMBER_PHONE VARCHAR2(200),
	MEMBER_EMAIL VARCHAR2(200)
);

DROP TABLE MEMBER;
DELETE MEMBER;

ALTER TABLE MEMBER ADD CONSTRAINT MEMBER_ID_PK PRIMARY KEY (MEMBER_ID);

INSERT INTO MEMBER
VALUES ('ID1', 'PW1', 'NAME1', 'ADDRESS1', 'PHONE1', 'EMAIL')

INSERT INTO MEMBER
VALUES ('ID2', 'PW2', 'NAME2', 'ADDRESS2', 'PHONE2', 'EMAIL2')

SELECT * FROM TAB;

-------------------------------------------------
-- 5. ROLE (권한)

CREATE TABLE ROLE (
	ROLE_NUM NUMBER,
	ROLE_NAME VARCHAR2(200)
);

ALTER TABLE ROLE ADD CONSTRAINT ROLE_RN_PK PRIMARY KEY (ROLE_NUM);

INSERT INTO ROLE
VALUES (1, 'ADMIN');

DROP TABLE ROLE;

-------------------------------------------------
-- 6. MEMBER ROLE (멤버 권한)

CREATE TABLE MEMBER_ROLE (
	MEMBER_ID VARCHAR2(200),
	ROLE_NUM NUMBER
);

ALTER TABLE MEMBER_ROLE ADD CONSTRAINT MR_PK PRIMARY KEY (MEMBER_ID, ROLE_NUM);
-- FK
ALTER TABLE MEMBER_ROLE ADD CONSTRAINT MR_ID_FK FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID);
ALTER TABLE MEMBER_ROLE ADD CONSTRAINT MR_RN_FK FOREIGN KEY (ROLE_NUM) REFERENCES ROLE;

INSERT INTO MEMBER_ROLE
VALUES ('ID1', 2);

SELECT * FROM MEMBER_ROLE;
DROP TABLE MEMBER_ROLE;

-------------------------------------------------

SELECT * FROM ADDRESS;
SELECT * FROM MEMBER;
SELECT * FROM USER_CONSTRAINTS;


COMMIT;